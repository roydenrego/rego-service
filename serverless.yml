service: rego-service
# app and org for use with dashboard.serverless.com
app: rego-service
org: roydenrego

provider:
  name: aws
  runtime: nodejs12.x
  region: ap-southeast-1
  #environment:
   # DB_CONN: ${file(./config/envVars.js):getEnvVars.value1}

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

functions:
  authorizer:
    handler: services/authorizer.handler
    memorySize: 128
  portfolio:
    handler: services/portfolio.get
    memorySize: 128
    events:
      - http:
          path: v1/portfolio
          method: get
          authorizer:
            name: authorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request
  contact:
    handler: services/contact-sub.post
    memorySize: 128
    events:
      - http:
          path: v1/contact
          method: post
          authorizer:
            name: authorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request
plugins:
  - serverless-offline
  - serverless-domain-manager

resources:
  Resources:
    GatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.WWW-Authenticate: "'Basic'"
        ResponseType: UNAUTHORIZED
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'

custom:
  customDomain:
    domainName: ${param:api_domain}
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true
    certificateArn: ${param:certificate_arn}
    endpointType: 'regional'